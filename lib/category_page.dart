import 'package:flutter/material.dart';

class Event {
  final String title;
  final String image;
  final bool isFree;
  final String category;

  Event({
    required this.title,
    required this.image,
    required this.isFree,
    required this.category,
  });
}

class EventCategoryScreen extends StatefulWidget {
  @override
  _EventCategoryScreenState createState() => _EventCategoryScreenState();
}

class _EventCategoryScreenState extends State<EventCategoryScreen> {
  final List<String> categories = [
    '–í—Å–µ', 'Stand up', '–ö–æ–Ω—Ü–µ—Ä—Ç—ã', '–°–ø–æ—Ä—Ç', '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è', '–ú–∞—Å—Ç'
  ];

  final List<Event> allEvents = [
    Event(title: '–í—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ ZAQ', image: 'assets/images/zaq_photo.png', isFree: false, category: '–ö–æ–Ω—Ü–µ—Ä—Ç—ã'),
    Event(title: '–ö–æ–Ω—Ü–µ—Ä—Ç Bakr –≤ –ê—Å—Ç–∞–Ω–µ', image: 'assets/images/bakr_photo.png', isFree: false, category: '–ö–æ–Ω—Ü–µ—Ä—Ç—ã'),
    Event(title: 'Open-Air Drift-show', image: 'assets/images/car_photo.png', isFree: true, category: '–°–ø–æ—Ä—Ç'),
    Event(title: '–¢—É—Ä –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ', image: 'assets/images/camels.png', isFree: false, category: '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è'),
    Event(title: '–°—Ç–µ–Ω–¥–∞–ø-–∫–æ–Ω—Ü–µ—Ä—Ç', image: 'assets/images/standup1.png', isFree: false, category: 'Stand up'),
    Event(title: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ú–µ—Ä–∫—É–ª—è', image: 'assets/images/standup2.png', isFree: false, category: 'Stand up'),
  ];

  String selectedCategory = '–í—Å–µ';

  List<Event> get filteredEvents {
    if (selectedCategory == '–í—Å–µ') return allEvents;
    return allEvents.where((event) => event.category == selectedCategory).toList();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('–ö–∞—Ç–µ–≥–æ—Ä–∏–∏')),
      body: Padding(
        padding: const EdgeInsets.all(16),
        child: Column(
          children: [
            // üîç –ü–æ–∏—Å–∫
            TextField(
              decoration: InputDecoration(
                hintText: '–Ω–∞–π—Ç–∏ —Å–æ–±—ã—Ç–∏—è',
                prefixIcon: const Icon(Icons.search),
                border: OutlineInputBorder(borderRadius: BorderRadius.circular(12)),
              ),
            ),
            const SizedBox(height: 16),

            // üè∑ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
            SizedBox(
              height: 40,
              child: ListView.separated(
                scrollDirection: Axis.horizontal,
                itemCount: categories.length,
                separatorBuilder: (_, __) => const SizedBox(width: 12),
                itemBuilder: (context, index) {
                  final category = categories[index];
                  final isSelected = selectedCategory == category;

                  return TextButton(
                    onPressed: () {
                      setState(() {
                        selectedCategory = category;
                      });
                    },
                    child: Text(
                      category,
                      style: TextStyle(
                        color: isSelected ? Colors.black : Colors.grey,
                        fontWeight: isSelected ? FontWeight.bold : FontWeight.normal,
                      ),
                    ),
                  );
                },
              ),
            ),
            const SizedBox(height: 16),

            // üìã –°–ø–∏—Å–æ–∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
            Expanded(
              child: GridView.builder(
                itemCount: filteredEvents.length,
                gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
                  crossAxisCount: 2,
                  mainAxisSpacing: 16,
                  crossAxisSpacing: 16,
                  childAspectRatio: 3 / 2,
                ),
                itemBuilder: (context, index) {
                  final event = filteredEvents[index];
                  return Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Expanded(
                        child: ClipRRect(
                          borderRadius: BorderRadius.circular(12),
                          child: Image.asset(event.image, fit: BoxFit.cover, width: double.infinity),
                        ),
                      ),
                      const SizedBox(height: 8),
                      Text(event.title, style: const TextStyle(fontWeight: FontWeight.w600)),
                      Text(event.isFree ? '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π' : '–ü–ª–∞—Ç–Ω—ã–π', style: const TextStyle(fontSize: 12)),
                    ],
                  );
                },
              ),
            ),
          ],
        ),
      ),
    );
  }
}
